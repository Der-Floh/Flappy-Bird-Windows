<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>